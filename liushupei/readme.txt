## 1. 数据简介
#### 1). 数据预览
数据输入：卫星图像（这里有一张图）

数据输出：船舰位置（这里有一张图）
#### 2). 数据格式
数据输入：.jpg（这里有一张图）

数据输出：.csv/rle编码（这里有一张图）
## 2. 数据处理
#### 1). 数据准备
去除有损图像（这里有一张图）
#### 2). 数据分类
(1). 按照有无船只分类（这里有一张图）

(2). 按照船只数量分类（这里有一张图）

(3). 按照数量区间分类（这里有一张图）
#### 3). 数据平衡
(1). 将分类后的数据按大致相同的比例结合形成有船数据（这里有一张图）

(2). 在有船数据中加入少量无船数据（这里有一张图）
#### 4). 数据生成
由于图片所占内存过大且图片数量过多，因此使用生成器生成数据。（这里有一张图）

定义一个循环，不断地生成一定数量的图片数据，并且在生成数据的过程中将rle数据解码成图片。（这里有一张图）
#### 5). 数据增强
将生成的图像数据拉伸、旋转、翻转、扭曲，得到增强数据。（这里有一张图）
## 3. 模型选择
#### 1). ResNet
#### 2). Mask R-cnn
#### 3). U-net
## 4. 模型建立
#### 1). 建立U-net
（这里有一张图）

(1). 连续多次使用Conv2D和MaxPooling2D进行卷积池化

(2). 连续多次使用Conv2D和UpSampling2D进行反卷积池化

(3). 反卷积过程中使用concatenate进行特征连接
#### 2). 定义loss
IoU：真实图像与预测图像的重合率，IoU越大，效果越好。

取(1-IoU)为loss。（这里有一张图）
#### 3). 选择optimizer
选择Adam自适应算法。（这里有一张图）
## 5. 参数调优
#### 1). 选择轮数
#### 2). 选择次数
#### 3). 选择个数
## 6. 模型评估
#### 1). 绘图观察
#### 2). 计算IoU
## 7. 模型优化
#### 1). 提高训练速度
改进数据处理部分：（这里有一张图）

最初的rle解码部分是遍历修改每一个掩码像素，改进后方法为遍历修改每一行掩码部分。
#### 2). 更改网络层数
增加层数：（这里有一张图）

减少层数：（这里有一张图）

#### 3). 减少假阳性反应
添加更多的无船图片（这里有一张图）
#### 4). 结果再处理
由于预测结果是在[0，1]之间的，所以需要将所有结果转换为0或1。（这里有一张图）
## 8. 最终结果
（这里有一张图）
## 9. 未来计划
继续优化改进。